#!/usr/bin/ruby
# RightScale API examples with basic xml parsing
# 
# MORE INFO: 
# rest_client ruby gem  http://rest-client.heroku.com/rdoc/
# crack ruby gem http://github.com/jnunemaker/crack/tree/master 
# http://github.com/jnunemaker/crack/tree/master

require 'rubygems'   # not required if ruby >= 1.9
require 'rest_client'
require 'crack'

username='robert@rightscale.com'
password='K3yst0n3'
account='7954'
server=680079 # server ID

#####
## Overview
#####

# Log all the interactions to/from RightScale for debugging

RestClient.log = 'rest.log'

# Create a new object to the RightScale API.
# This object will stay open and only needs to be created once.
# This base URI will be appended to with our specific REST calls to the API

rsAPI = RestClient::Resource.new("https://my.rightscale.com/api/acct/#{account}",username, password)

## Change a resource: pass hash of parameters
## 
## Before you can change a resource you must first determine the 
## REST statement needed for this.  In the following example
## we will change the name/nickname of a server in a deployment
##
## Step 1: find the server # through the RightScale dashboard
##	     by hovering over the server link & noting the server #.
## Step 2: Determine the REST call needed & what parameters are 
## 	     needed if any.
## Step 3: Pass the parameters to the proper rest_client object

## REST: PUT https://my.rightscale.com/api/acct/xxx/servers/yyy/
##	 Passes parameters as a hash.
##	 Adds custom header required by RightScale :x_api_version = '1.0'
##	 See the documentation for responses & parameters

#params = { "server[nickname]" => "RC: Final" }
#data = rsAPI["servers/#{server}"].put params, :x_api_version => '1.0'


## Retrieve information on one server
## Since authenication and the base URI have been created
## We can use the existing object and supply the specific
## Resource we want to manipulate.

data = rsAPI["servers/#{server}"].get :x_api_version => '1.0'

## Get information all your servers
## REST: GET https://my.rightscale.com/api/acct/xxx/servers

#data = rsAPI["servers"].get :x_api_version => '1.0'

## Start a server using post
## Passes an empty parameter hash 
#params = {}
#data = rsAPI["servers/#{server}/stop"].post params, :x_api_version => '1.0'

## Run script against a server
## Determine the script # via the RightScale dashboard
## URL: POST /api/acct/1/servers/000/run_script

#scriptnumber = 45374
#params = { "right_script" => "#{scriptnumber}" }
#data = rsAPI["servers/#{server}/run_script"].post params, :x_api_version => '1.0'

##
## Create an EBS Volume
## URL: POST /api/acct/1/ec2_ebs_volumes

#params = {	"ec2_ebs_volume[nickname]" => "RC:API_EBS_TEST",
#		"ec2_ebs_volume[description]" => "API created description",
#		"ec2_ebs_volume[ec2_availability_zone]" => "us-east-1a",
#		"ec2_ebs_volume[aws_size]" => "1"
#	}

#data = rsAPI['ec2_ebs_volumes'].post params, :x_api_version => '1.0'

###
### Display EBS Volumes
### URL: GET /api/acct/1/ec2_ebs_volumes.xml

#data = rsAPI['ec2_ebs_volumes'].get :x_api_version=> '1.0'


###
### Show status report
### URL:  GET /api/acct/1/statuses/000

#data = rsAPI['statuses/000'].get :x_api_version => '1.0'

###
### Alert status
### GET /api/acct/1/alert_specs.xml

#data = rsAPI['alert_specs'].get :x_api_version => '1.0'

###
### Server Arrays
### URL: GET /api/acct/1/server_arrays.xml

#data = rsAPI['server_arrays'].get :x_api_version => '1.0'

###
### Create a new credential
### URL: POST /api/acct/1/credentials

params = {	"credential[name]" 		=> "RC: APITEST",
		"credential[description]"	=> "API Description",
		"credential[value]"		=> "MyAPIValue"
	}

data = rsAPI['credentials'].post params, :x_api_version => '1.0'



###
### Dump to console the API results
###
puts data.inspect

#test = Crack::XML.parse(data)
#puts data.inspect
#test['servers'].each { |servers| puts servers['nickname'] }

#data = Crack::XML.parse(resp)
#data['deployments'].each { | deployment| puts deployment['nickname'] }

